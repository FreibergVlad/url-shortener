// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        (unknown)
// source: shorturls/management/messages/v1/short_url.proto

package messagesv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShortURLStatus int32

const (
	ShortURLStatus_SHORT_URL_STATUS_UNSPECIFIED ShortURLStatus = 0
	ShortURLStatus_SHORT_URL_STATUS_ACTIVE      ShortURLStatus = 1
	ShortURLStatus_SHORT_URL_STATUS_DELETED     ShortURLStatus = 3
)

// Enum value maps for ShortURLStatus.
var (
	ShortURLStatus_name = map[int32]string{
		0: "SHORT_URL_STATUS_UNSPECIFIED",
		1: "SHORT_URL_STATUS_ACTIVE",
		3: "SHORT_URL_STATUS_DELETED",
	}
	ShortURLStatus_value = map[string]int32{
		"SHORT_URL_STATUS_UNSPECIFIED": 0,
		"SHORT_URL_STATUS_ACTIVE":      1,
		"SHORT_URL_STATUS_DELETED":     3,
	}
)

func (x ShortURLStatus) Enum() *ShortURLStatus {
	p := new(ShortURLStatus)
	*p = x
	return p
}

func (x ShortURLStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShortURLStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_shorturls_management_messages_v1_short_url_proto_enumTypes[0].Descriptor()
}

func (ShortURLStatus) Type() protoreflect.EnumType {
	return &file_shorturls_management_messages_v1_short_url_proto_enumTypes[0]
}

func (x ShortURLStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShortURLStatus.Descriptor instead.
func (ShortURLStatus) EnumDescriptor() ([]byte, []int) {
	return file_shorturls_management_messages_v1_short_url_proto_rawDescGZIP(), []int{0}
}

type LongURL struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Assembled     string                 `protobuf:"bytes,2,opt,name=assembled,proto3" json:"assembled,omitempty"`
	Scheme        string                 `protobuf:"bytes,3,opt,name=scheme,proto3" json:"scheme,omitempty"`
	Host          string                 `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	Path          string                 `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	Query         string                 `protobuf:"bytes,6,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LongURL) Reset() {
	*x = LongURL{}
	mi := &file_shorturls_management_messages_v1_short_url_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LongURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LongURL) ProtoMessage() {}

func (x *LongURL) ProtoReflect() protoreflect.Message {
	mi := &file_shorturls_management_messages_v1_short_url_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LongURL.ProtoReflect.Descriptor instead.
func (*LongURL) Descriptor() ([]byte, []int) {
	return file_shorturls_management_messages_v1_short_url_proto_rawDescGZIP(), []int{0}
}

func (x *LongURL) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *LongURL) GetAssembled() string {
	if x != nil {
		return x.Assembled
	}
	return ""
}

func (x *LongURL) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *LongURL) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *LongURL) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *LongURL) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type ShortURL struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	OrganizationId string                  `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	LongUrl        *LongURL                `protobuf:"bytes,2,opt,name=long_url,json=longUrl,proto3" json:"long_url,omitempty"`
	ShortUrl       string                  `protobuf:"bytes,3,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`
	Domain         string                  `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	Alias          string                  `protobuf:"bytes,5,opt,name=alias,proto3" json:"alias,omitempty"`
	Status         ShortURLStatus          `protobuf:"varint,6,opt,name=status,proto3,enum=shorturls.management.messages.v1.ShortURLStatus" json:"status,omitempty"`
	ExpiresAt      *timestamppb.Timestamp  `protobuf:"bytes,7,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	CreatedAt      *timestamppb.Timestamp  `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	DeletedAt      *timestamppb.Timestamp  `protobuf:"bytes,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	CreatedBy      string                  `protobuf:"bytes,11,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Description    *wrapperspb.StringValue `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	Tags           []string                `protobuf:"bytes,13,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ShortURL) Reset() {
	*x = ShortURL{}
	mi := &file_shorturls_management_messages_v1_short_url_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortURL) ProtoMessage() {}

func (x *ShortURL) ProtoReflect() protoreflect.Message {
	mi := &file_shorturls_management_messages_v1_short_url_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortURL.ProtoReflect.Descriptor instead.
func (*ShortURL) Descriptor() ([]byte, []int) {
	return file_shorturls_management_messages_v1_short_url_proto_rawDescGZIP(), []int{1}
}

func (x *ShortURL) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ShortURL) GetLongUrl() *LongURL {
	if x != nil {
		return x.LongUrl
	}
	return nil
}

func (x *ShortURL) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

func (x *ShortURL) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ShortURL) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *ShortURL) GetStatus() ShortURLStatus {
	if x != nil {
		return x.Status
	}
	return ShortURLStatus_SHORT_URL_STATUS_UNSPECIFIED
}

func (x *ShortURL) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *ShortURL) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ShortURL) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *ShortURL) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ShortURL) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *ShortURL) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_shorturls_management_messages_v1_short_url_proto protoreflect.FileDescriptor

var file_shorturls_management_messages_v1_short_url_proto_rawDesc = []byte{
	0x0a, 0x30, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x75, 0x72, 0x6c, 0x73, 0x2f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x20, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x75, 0x72, 0x6c, 0x73, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x01, 0x0a, 0x07, 0x4c, 0x6f, 0x6e, 0x67, 0x55, 0x52,
	0x4c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xb2, 0x04, 0x0a, 0x08, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x44, 0x0a, 0x08, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x75, 0x72, 0x6c, 0x73, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x6e, 0x67, 0x55, 0x52, 0x4c, 0x52, 0x07, 0x6c, 0x6f,
	0x6e, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55,
	0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x12, 0x48, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x30, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x75, 0x72, 0x6c, 0x73, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x52, 0x4c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x2a, 0x6d,
	0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x52, 0x4c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x20, 0x0a, 0x1c, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x5f, 0x55, 0x52, 0x4c, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x5f, 0x55, 0x52, 0x4c, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12,
	0x1c, 0x0a, 0x18, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x5f, 0x55, 0x52, 0x4c, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x42, 0xb5, 0x02,
	0x0a, 0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x75, 0x72, 0x6c, 0x73, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x5b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x46, 0x72, 0x65, 0x69, 0x62, 0x65, 0x72, 0x67, 0x56, 0x6c, 0x61, 0x64,
	0x2f, 0x75, 0x72, 0x6c, 0x2d, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x75, 0x72,
	0x6c, 0x73, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x4d, 0x4d, 0xaa, 0x02, 0x20, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x75, 0x72, 0x6c, 0x73, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x20,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x75, 0x72, 0x6c, 0x73, 0x5c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x2c, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x75, 0x72, 0x6c, 0x73, 0x5c, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x23, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x75, 0x72, 0x6c, 0x73, 0x3a, 0x3a, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x3a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shorturls_management_messages_v1_short_url_proto_rawDescOnce sync.Once
	file_shorturls_management_messages_v1_short_url_proto_rawDescData = file_shorturls_management_messages_v1_short_url_proto_rawDesc
)

func file_shorturls_management_messages_v1_short_url_proto_rawDescGZIP() []byte {
	file_shorturls_management_messages_v1_short_url_proto_rawDescOnce.Do(func() {
		file_shorturls_management_messages_v1_short_url_proto_rawDescData = protoimpl.X.CompressGZIP(file_shorturls_management_messages_v1_short_url_proto_rawDescData)
	})
	return file_shorturls_management_messages_v1_short_url_proto_rawDescData
}

var file_shorturls_management_messages_v1_short_url_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_shorturls_management_messages_v1_short_url_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_shorturls_management_messages_v1_short_url_proto_goTypes = []any{
	(ShortURLStatus)(0),            // 0: shorturls.management.messages.v1.ShortURLStatus
	(*LongURL)(nil),                // 1: shorturls.management.messages.v1.LongURL
	(*ShortURL)(nil),               // 2: shorturls.management.messages.v1.ShortURL
	(*timestamppb.Timestamp)(nil),  // 3: google.protobuf.Timestamp
	(*wrapperspb.StringValue)(nil), // 4: google.protobuf.StringValue
}
var file_shorturls_management_messages_v1_short_url_proto_depIdxs = []int32{
	1, // 0: shorturls.management.messages.v1.ShortURL.long_url:type_name -> shorturls.management.messages.v1.LongURL
	0, // 1: shorturls.management.messages.v1.ShortURL.status:type_name -> shorturls.management.messages.v1.ShortURLStatus
	3, // 2: shorturls.management.messages.v1.ShortURL.expires_at:type_name -> google.protobuf.Timestamp
	3, // 3: shorturls.management.messages.v1.ShortURL.created_at:type_name -> google.protobuf.Timestamp
	3, // 4: shorturls.management.messages.v1.ShortURL.deleted_at:type_name -> google.protobuf.Timestamp
	4, // 5: shorturls.management.messages.v1.ShortURL.description:type_name -> google.protobuf.StringValue
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_shorturls_management_messages_v1_short_url_proto_init() }
func file_shorturls_management_messages_v1_short_url_proto_init() {
	if File_shorturls_management_messages_v1_short_url_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shorturls_management_messages_v1_short_url_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shorturls_management_messages_v1_short_url_proto_goTypes,
		DependencyIndexes: file_shorturls_management_messages_v1_short_url_proto_depIdxs,
		EnumInfos:         file_shorturls_management_messages_v1_short_url_proto_enumTypes,
		MessageInfos:      file_shorturls_management_messages_v1_short_url_proto_msgTypes,
	}.Build()
	File_shorturls_management_messages_v1_short_url_proto = out.File
	file_shorturls_management_messages_v1_short_url_proto_rawDesc = nil
	file_shorturls_management_messages_v1_short_url_proto_goTypes = nil
	file_shorturls_management_messages_v1_short_url_proto_depIdxs = nil
}
